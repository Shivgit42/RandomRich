

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int          @default(autoincrement())  @id
  firstName       String
  lastName        String
  email           String       @unique
  password        String
  updatedAt       DateTime     @updatedAt  
  
  refreshTokens   RefreshToken[]
  account         Account?
  
  SentTransactions      Transaction[] @relation("SentTransactions")
  ReceivedTransactions  Transaction[] @relation("ReceivedTransactions")
}   


model RefreshToken {
  id             String     @id  @default(uuid())
  tokenHash      String
  userId         Int
  user           User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt      DateTime    @default(now())
  revokedAt      DateTime?
  expiresAt      DateTime

  @@index([userId])
}

model Account {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  balance    Decimal  @default(0.0) @db.Decimal(12, 2)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum TransactionStatus {
  PENDING
  SUCCESS
  FAILED
}

enum TransactionType {
  TRANSFER
  DEPOSIT
  WITHDRAW
}

model Transaction {
  id          String    @id @default(uuid())
  senderId    Int  
  receiverId  Int
  amount      Decimal   @db.Decimal(12,2)
  status      TransactionStatus
  type        TransactionType
  createdAt   DateTime  @default(now())

  sender      User      @relation("SentTransactions", fields: [senderId], references: [id])
  receiver    User      @relation("ReceivedTransactions", fields: [receiverId], references: [id])

  @@index([senderId])
  @@index([receiverId])
}